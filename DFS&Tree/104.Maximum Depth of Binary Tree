###方法一，借助一个辅助队列层次遍历，记录遍历过的层数即为最大深度
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def maxDepth(self, root: TreeNode) -> int:
        if root == None:
            return 0 
        else:
            queue = [root]
            num = 0
            while(queue != []):
                num += 1
                #更新下一层的queue
                nextqueue = []
                for i in queue:
                    if i.left is not None:
                        nextqueue.append(i.left)
                    if i.right is not None:
                        nextqueue.append(i.right)
                queue = nextqueue
            return num
            
###方法二，递归
class Solution:
    def maxDepth(self, root: TreeNode) -> int:
        if root==None:
            return 0
        return 1 + max(self.maxDepth(root.left),self.maxDepth(root.right))
