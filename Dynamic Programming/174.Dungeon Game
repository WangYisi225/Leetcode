#C++ code

class Solution {
public:
    int calculateMinimumHP(vector<vector<int>>& dungeon) {
        if (dungeon.size()<1 || dungeon[0].size()<1) return 0;
        int m=dungeon.size(),n=dungeon[0].size();
        
        vector<vector<int>> dp(m,vector<int>(n,0));
        dp[m-1][n-1]=max(1,-1*dungeon[m-1][n-1]+1);    //初始化右下角的格子
        
        for (int i=m-2;i>=0;i--)        //右边界
            dp[i][n-1]=max(1,dp[i+1][n-1]-dungeon[i][n-1]);    
        
        for (int i=n-2;i>=0;i--)        //下边界
            dp[m-1][i]=max(1,dp[m-1][i+1]-dungeon[m-1][i]);
       
        for (int i=m-2;i>=0;i--)
            for (int j=n-2;j>=0;j--)
                dp[i][j]=max(1,min(dp[i][j+1],dp[i+1][j])-dungeon[i][j]);
        
        return dp[0][0];
    }
};
